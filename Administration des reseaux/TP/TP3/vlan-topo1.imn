node n1 {
    type router
    model host
    network-config {
	hostname c1
	!
	interface eth0
	 ip address 10.0.0.10/24
	!
    }
    canvas c1
    iconcoords {98.0 167.0}
    labelcoords {98.0 199.0}
    interface-peer {eth0 n9}
}

node n5 {
    type router
    model PC
    network-config {
	hostname c1-10
	!
	interface eth0
	 ip address 10.0.1.10/24
	!
    }
    canvas c1
    iconcoords {278.0 57.0}
    labelcoords {278.0 89.0}
    interface-peer {eth0 n9}
}

node n6 {
    type router
    model PC
    network-config {
	hostname c2-10
	!
	interface eth0
	 ip address 10.0.1.20/24
	!
    }
    canvas c1
    iconcoords {494.0 54.0}
    labelcoords {494.0 86.0}
    interface-peer {eth0 n3}
}

node n7 {
    type router
    model PC
    network-config {
	hostname c1-20
	!
	interface eth0
	 ip address 10.0.2.10/24
	!
    }
    canvas c1
    iconcoords {277.0 303.0}
    labelcoords {277.0 335.0}
    interface-peer {eth0 n9}
}

node n8 {
    type router
    model PC
    network-config {
	hostname c2-20
	!
	interface eth0
	 ip address 10.0.2.20/24
	!
    }
    canvas c1
    iconcoords {493.0 295.0}
    labelcoords {493.0 327.0}
    interface-peer {eth0 n3}
}

node n9 {
    type router
    model router
    network-config {
	hostname sw1
	!
	interface eth3
	!
	interface eth2
	!
	interface eth1
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {277.0 167.0}
    labelcoords {277.0 199.0}
    interface-peer {eth0 n1}
    services {OvsService IPForward}
    custom-config {
	custom-config-id service:OvsService
	custom-command OvsService
	config {
	files=('OvsService.sh', )
	}
    }
    custom-config {
	custom-config-id service:OvsService:OvsService.sh
	custom-command OvsService.sh
	config {
	#!/bin/sh
	# auto-generated by OvsService (OvsService.py)
	## First make sure that the ovs services are up and running
	/etc/init.d/openvswitch-switch start < /dev/null
	
	## create the switch itself, set the fail mode to secure, 
	## this stops it from routing traffic without defined flows.
	## remove the -- and everything after if you want it to act as a regular switch
	ovs-vsctl add-br ovsbr0
	
	ovs-vsctl add-port ovsbr0 eth0
	ovs-vsctl add-port ovsbr0 eth1
	ovs-vsctl add-port ovsbr0 eth2
	ovs-vsctl add-port ovsbr0 eth3
	
	}
    }
    interface-peer {eth1 n5}
    interface-peer {eth2 n7}
    custom-image /opt/core/share/core/icons/normal/lanswitch.gif
    interface-peer {eth3 n3}
}

node n3 {
    type router
    model router
    network-config {
	hostname sw2
	!
	interface eth3
	!
	interface eth1
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {494.0 167.0}
    labelcoords {494.0 199.0}
    services {OvsService IPForward}
    custom-config {
	custom-config-id service:OvsService
	custom-command OvsService
	config {
	files=('OvsService.sh', )
	}
    }
    custom-config {
	custom-config-id service:OvsService:OvsService.sh
	custom-command OvsService.sh
	config {
	#!/bin/sh
	# auto-generated by OvsService (OvsService.py)
	## First make sure that the ovs services are up and running
	/etc/init.d/openvswitch-switch start < /dev/null
	
	## create the switch itself, set the fail mode to secure, 
	## this stops it from routing traffic without defined flows.
	## remove the -- and everything after if you want it to act as a regular switch
	ovs-vsctl add-br ovsbr0
	
	ovs-vsctl add-port ovsbr0 eth0
	ovs-vsctl add-port ovsbr0 eth1
	ovs-vsctl add-port ovsbr0 eth2
	ovs-vsctl add-port ovsbr0 eth3
	ovs-vsctl add-port ovsbr0 eth4
	}
    }
    custom-image /opt/core/share/core/icons/normal/lanswitch.gif
    interface-peer {eth0 n6}
    interface-peer {eth1 n8}
    interface-peer {eth3 n9}
}

link l1 {
    nodes {n9 n1}
    bandwidth 0
}

link l2 {
    nodes {n5 n9}
    bandwidth 0
}

link l4 {
    nodes {n7 n9}
    bandwidth 0
}

link l3 {
    nodes {n3 n6}
    bandwidth 0
}

link l5 {
    nodes {n3 n8}
    bandwidth 0
}

link l7 {
    nodes {n3 n9}
    bandwidth 0
}

annotation a1 {
    iconcoords {264.0 135.0}
    type text
    label {eth1}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a2 {
    iconcoords {225.0 157.0}
    type text
    label {eth0}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a3 {
    type text
    iconcoords {79.0 141.0}
    label {}
    canvas c1
}

annotation a4 {
    iconcoords {258.0 207.0}
    type text
    label {eth2}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a5 {
    type text
    iconcoords {264.0 183.0}
    label {}
    canvas c1
}

annotation a6 {
    iconcoords {298.0 157.0}
    type text
    label {eth3}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a8 {
    iconcoords {476.0 137.0}
    type text
    label {eth0}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a11 {
    iconcoords {436.0 158.0}
    type text
    label {eth3}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a9 {
    iconcoords {478.0 203.0}
    type text
    label {eth1}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a10 {
    type text
    iconcoords {490.0 180.0}
    label {}
    canvas c1
}

annotation a12 {
    type text
    iconcoords {500.0 183.0}
    label {}
    canvas c1
}

annotation a13 {
    iconcoords {228.0 0.0 561.0 172.0}
    type oval
    label {VLAN10}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #CFCFFF
    width 0
    border black
    effects {bold italic}
    canvas c1
}

annotation a14 {
    iconcoords {228.0 158.0 560.0 346.0}
    type oval
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #b1f0a3
    width 0
    border #000000
    effects {bold italic}
    canvas c1
}

annotation a15 {
    iconcoords {361.0 324.0}
    type text
    label {VLAN20}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold italic}
    canvas c1
}

annotation a16 {
    type text
    iconcoords {406.0 316.0}
    label {}
    canvas c1
}

annotation a18 {
    type text
    iconcoords {496.0 156.0}
    label {}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

